From c737a5c5a68fd80cb5cb3dcb2903da211f401990 Mon Sep 17 00:00:00 2001
From: Lina Chen <chenln1124@thundersoft.com>
Date: Tue, 27 Dec 2022 07:10:12 +0000
Subject: [PATCH 09/10] Fix compile error for Ankai platform

---
 CMakeLists.txt             | 4 ++--
 crypto/include/datatypes.h | 2 +-
 crypto/include/integers.h  | 4 ++++
 srtp/srtp.c                | 2 +-
 4 files changed, 8 insertions(+), 4 deletions(-)
 mode change 100644 => 100755 CMakeLists.txt
 mode change 100644 => 100755 crypto/include/datatypes.h
 mode change 100644 => 100755 crypto/include/integers.h
 mode change 100644 => 100755 srtp/srtp.c

diff --git a/CMakeLists.txt b/CMakeLists.txt
old mode 100644
new mode 100755
index 90c54ce..dd18f1f
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -57,7 +57,7 @@ set(ENABLE_OPENSSL OFF CACHE BOOL "Enable OpenSSL crypto engine")
 set(ENABLE_MBEDTLS ON CACHE BOOL "Enable MbedTLS crypto engine")
 set(TEST_APPS OFF CACHE BOOL "Build test applications")
 option(BUILD_SHARED_LIBS "Build shared library" OFF)
-option(KVS_PLAT_ESP_FREERTOS "Build for ESP FreeRTOS" OFF)
+option(KVS_PLAT_ANKAI_FREERTOS "Build for ANKAI FreeRTOS" OFF)
 
 if(ENABLE_OPENSSL AND ENABLE_MBEDTLS)
   message(FATAL_ERROR "ssl conflict. can not enable openssl and mbedtls simultaneously.")
@@ -71,7 +71,7 @@ if(ENABLE_OPENSSL)
 endif()
 
 if(ENABLE_MBEDTLS)
-  if(NOT KVS_PLAT_ESP_FREERTOS)
+  if(NOT KVS_PLAT_ANKAI_FREERTOS)
     find_package(MbedTLS REQUIRED)
   endif()
   include_directories(${MBEDTLS_INCLUDE_DIRS})
diff --git a/crypto/include/datatypes.h b/crypto/include/datatypes.h
old mode 100644
new mode 100755
index 0037968..e2396ac
--- a/crypto/include/datatypes.h
+++ b/crypto/include/datatypes.h
@@ -59,7 +59,7 @@
 #elif defined HAVE_WINSOCK2_H
 #include <winsock2.h>
 #else
-#ifdef KVS_PLAT_ESP_FREERTOS
+#ifdef KVS_PLAT_ANKAI_FREERTOS
 #include <lwip/def.h>
 #else
 #error "Platform not recognized"
diff --git a/crypto/include/integers.h b/crypto/include/integers.h
old mode 100644
new mode 100755
index f2cd7c0..cfd0054
--- a/crypto/include/integers.h
+++ b/crypto/include/integers.h
@@ -81,6 +81,7 @@ typedef unsigned long long uint64_t;
 #endif
 #endif
 
+#ifndef KVS_PLAT_ANKAI_FREERTOS
 /* Reasonable defaults for 32 bit machines - you may need to
  * edit these definitions for your own machine. */
 #ifndef HAVE_UINT8_T
@@ -103,6 +104,9 @@ extern uint64_t make64(uint32_t high, uint32_t low);
 extern uint32_t high32(uint64_t value);
 extern uint32_t low32(uint64_t value);
 #endif
+#else
+typedef unsigned int       size_t;
+#endif
 
 /* These macros are to load and store 32-bit values from un-aligned
    addresses.  This is required for processors that do not allow unaligned
diff --git a/srtp/srtp.c b/srtp/srtp.c
old mode 100644
new mode 100755
index eff328f..2bc6263
--- a/srtp/srtp.c
+++ b/srtp/srtp.c
@@ -2928,7 +2928,7 @@ srtp_err_status_t srtp_create(srtp_t *session, /* handle for session     */
     return srtp_err_status_ok;
 }
 
-srtp_err_status_t srtp_remove_stream(srtp_t session, uint32_t ssrc)
+srtp_err_status_t srtp_remove_stream(srtp_t session, unsigned int ssrc)
 {
     srtp_stream_ctx_t *stream, *last_stream;
     srtp_err_status_t status;
-- 
2.17.1

